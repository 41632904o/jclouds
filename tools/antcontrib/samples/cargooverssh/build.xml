<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2009 Cloud Conscious, LLC. <info@cloudconscious.com>

    ====================================================================
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
    ====================================================================

-->
<project xmlns:artifact="urn:maven-artifact-ant" name="cargooverssh" default="cargooverssh" basedir=".">
  <property file="build.properties" />
  <property name="password" value="" />
  <property name="keyfile" value="" />
  <property name="listenport" value="8080" />
  <property name="container.zip" value="http://www.ibiblio.org/pub/mirrors/apache/tomcat/tomcat-6/v6.0.20/bin/apache-tomcat-6.0.20.zip" />
  <property name="warfile" value="build/samples-blazeds.war" />

  <!-- maven must be available before we use it -->
  <delete dir="build/cargo"/>
  <mkdir dir="build/cargo"/>

<!--
  <get src="http://apache.imghat.com/maven/binaries/maven-ant-tasks-2.1.0.jar" dest="build/maven-ant-tasks-2.1.0.jar"/>
  <get src="http://web-actions.googlecode.com/files/samples-blazeds.war" dest="${warfile}"/>
-->
  <!-- initialize maven tasks -->
  <path id="maven-ant-tasks.classpath" path="build/maven-ant-tasks-2.1.0.jar"/>
  <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" classpathref="maven-ant-tasks.classpath"/>

  <artifact:localRepository id="local.repository" path="${user.home}/.m2/repository"/>
  <artifact:remoteRepository id="jclouds-snapshot.repository" url="http://jclouds.rimuhosting.com/maven2/snapshots"/>
  <artifact:remoteRepository id="cargo-snapshot.repository" url="http://snapshots.repository.codehaus.org" />

  <!-- Setup maven so that we can get latest version of jclouds, jclouds, and jruby -->
  <artifact:dependencies pathId="jclouds.classpath">
    <dependency groupid="org.codehaus.cargo" artifactId="cargo-ant" version="1.0.1-SNAPSHOT"/>
    <dependency groupid="org.codehaus.cargo" artifactId="cargo-core-container-tomcat" version="1.0.1-SNAPSHOT"/>
    <dependency groupId="org.jclouds" artifactId="${driver}" version="1.0-SNAPSHOT"/>
    <dependency groupId="org.jclouds" artifactId="jclouds-antcontrib" version="1.0-SNAPSHOT"/>
    <remoteRepository refid="jclouds-snapshot.repository"/>
    <remoteRepository refid="cargo-snapshot.repository"/>
    <localRepository refid="local.repository"/>
  </artifact:dependencies>

  <typedef name="compute" classname="org.jclouds.tools.ant.taskdefs.compute.ComputeTask" classpathref="jclouds.classpath" />
  <taskdef name="sshexec" classname="org.apache.tools.ant.taskdefs.optional.ssh.SSHExec" classpathref="jclouds.classpath" />
  <taskdef resource="cargo.tasks" classpathref="jclouds.classpath"/>

  <property name="service" value="${service}"/>
  <input message="What is your account on ${service}?" addproperty="account"/>
  <input message="What is the key for ${account}?" addproperty="key"/>
  <property name="nodename" value="terremark-blaze"/>
  <property name="url" value="compute://${account}:${key}@${service}"/>

  <target name="destroy" description="destroy the node ${nodename}">
    <compute action="destroy" provider="${url}">
       <node name="${nodename}" />
    </compute>
    <sleep seconds="2" />
  </target>

  <target name="create" description="create the node ${nodename}" depends="destroy" >
     <compute action="create" provider="${url}">
        <node name="${nodename}"  os="JEOS" size="SMALLEST"
              runscript="runscript.sh" openports="22,${listenport}"
              hostproperty="host" usernameproperty="username" passwordproperty="password" />
     </compute>
  </target>

  <target name="cargooverssh" depends="create" description="run cargo on remote node" >
    <echo message="deploying tomcat and blaze to: ${nodename}" />
    <cargo containerId="tomcat6x" output="build/output.log" log="build/cargo.log" action="start" timeout="600000">
      <zipurlinstaller installurl="${container.zip}" />
      <configuration home="build/cargo" type="standalone">
        <property name="cargo.java.home" value="/usr/lib/jvm/java-6-openjdk"/>
        <property name="cargo.hostname" value="${host}"/>
        <property name="cargo.servlet.port" value="${listenport}"/>
        <property name="cargo.ssh.host" value="${host}"/>
        <property name="cargo.ssh.username" value="${username}"/>
        <property name="cargo.ssh.password" value="${password}"/>
        <property name="cargo.ssh.keyfile" value="${keyfile}"/>
        <property name="cargo.ssh.remotebase" value="/tmp/cargo"/>
        <property name="cargo.logging" value="high"/>
        <deployable type="war" file="${warfile}"/>
      </configuration>
    </cargo>
  </target>

  <target name="justplaincargo" description="run cargo on local machine" >
    <echo message="deploying tomcat and blaze to: localhost" />
    <cargo containerId="tomcat6x" output="build/output.log" log="build/cargo.log" action="start" timeout="600000">
      <zipurlinstaller installurl="${container.zip}" />
      <configuration home="build/cargo" type="standalone">
        <property name="cargo.servlet.port" value="${listenport}"/>
        <property name="cargo.logging" value="high"/>
        <deployable type="war" file="${warfile}"/>
      </configuration>
    </cargo>
  </target>

</project>
